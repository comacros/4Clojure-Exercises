http://www.4clojure.com/problem/88

Difficulty:	Easy
Topics:	set-theory

Write a function which returns the symmetric difference of two sets. The symmetric difference is the set of items belonging to one but not both of the two sets.

1. (= (__ #{1 2 3 4 5 6} #{1 3 5 7}) #{2 4 6 7})
2. (= (__ #{:a :b :c} #{}) #{:a :b :c})
3. (= (__ #{} #{4 5 6}) #{4 5 6})
4. (= (__ #{[1 2] [2 3]} #{[2 3] [3 4]}) #{[1 2] [3 4]})

Solutions:

1. (fn foo [xs ys]
     (let [zs (concat xs ys)
           freq (frequencies zs)]
       (set (for [k freq
                  :when (= 1 (second k))]
              (first k)))))
