http://www.4clojure.com/problem/58
 
Difficulty:	Medium
Topics:	higher-order-functions core-functions

Write a function which allows you to create function compositions. The parameter list should take a variable number of functions, and create a function applies them from right-to-left.

Special Restrictions: comp

1. (= [3 2 1] ((__ rest reverse) [1 2 3 4]))
2. (= 5 ((__ (partial + 3) second) [1 2 3 4]))
3. (= true ((__ zero? #(mod % 8) +) 3 5 7 9))
4. (= "HELLO" ((__ #(.toUpperCase %) #(apply str %) take) 5 "hello world"))

Solutions:

1. (fn [& a]
     (fn [& b]
       (loop [c (reverse a) y b]
         (if (empty? c)
           (nth y 0)
           (recur (rest c) (list (apply (nth c 0) y)))))))
