https://www.4clojure.com/problem/74

Difficulty:	Medium
Topics:	

Given a string of comma separated integers, write a function which returns a new comma separated string that only contains the numbers which are perfect squares.

1. (= (__ "4,5,6,7,8,9") "4,9")
2. (= (__ "15,16,25,36,37") "16,25,36")

Solutions:

1. (fn foo [s]
     (let [string-to-int #(let [ds (re-seq #"\d+" %)]
                             (for [d ds] (Integer/parseInt d)))
           int-to-string #(if (= 0 (count %))
                            ""
                            (let [ss (for [x %] (str "," x))]
                              (apply str (rest (apply str ss)))))
           is-perfect #(let [f (Math/sqrt %)
                             d (int f)]
                         (= (* d d) %))
           ds (string-to-int s)
           ps (for [d ds :when (is-perfect d)] d)]
       (int-to-string ps)))
