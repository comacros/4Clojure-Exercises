https://www.4clojure.com/problem/39

Difficulty:	Easy
Topics:	seqs core-functions

Write a function which takes two sequences and returns the first item from each, then the second item from each, then the third, etc.

1. (= (__ [1 2 3] [:a :b :c]) '(1 :a 2 :b 3 :c))
2. (= (__ [1 2] [3 4 5 6]) '(1 3 2 4))
3. (= (__ [1 2 3 4] [5]) [1 5])
4. (= (__ [30 20] [25 15]) [30 25 20 15])

Solutions:

1. (fn foo [xs ys]
     (let [x1 (first xs) y1 (first ys)]
       (when (and x1 y1)
         (cons x1
               (cons y1
                     (foo (rest xs) (rest ys)))))))
